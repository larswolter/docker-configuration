version: "2"
services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_certs:/etc/nginx/certs
    labels: 
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: ""
    networks:
      - nginx_proxy
      - nginx_prosody
      - nginx_synapse
      - nginx_ultisite
      - nginx_weather
      - nginx_toolws
      - nginx_nextcloud

  nginx-gen:
    build:
      context: "."
      dockerfile: nginx-gen.dockerfile
    container_name: nginx-gen
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro 
    volumes_from: 
      - nginx 
    labels: 
      com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: ""
    depends_on:
      - nginx
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    networks:
      - nginx_proxy
      - nginx_prosody
      - nginx_ultisite
      - nginx_toolws
      - nginx_weather
      - nginx_nextcloud
      - nginx_synapse

  nginx-letsencrypt:
    image: nginxproxy/acme-companion:latest
    container_name: nginx-letsencrypt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  
      - acme:/etc/acme.sh
    volumes_from: 
      - nginx 
    depends_on:
      - nginx-gen
    environment:
      ACME_CA_URI: https://acme-staging.api.letsencrypt.org/directory
      NGINX_DOCKER_GEN_CONTAINER: nginx-gen
    networks:
      - nginx_proxy

  prosody:
    build:
      context: "."
      dockerfile: prosody.dockerfile
      args:
        DOMAINNAME:
    container_name: prosody
    ports:
      - 0.0.0.0:5222:5222/tcp
      - 0.0.0.0:5269:5269/tcp
    volumes:
      - nginx_certs:/etc/prosody/certs:ro
    environment:
      VIRTUAL_HOST: "${DOMAINNAME}"
      VIRTUAL_PORT: "5280"
      LETSENCRYPT_HOST: "${DOMAINNAME}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
    depends_on:
      - mariadb
      - nginx-gen
      - nginx-letsencrypt
    networks:
      nginx_prosody:
      mariadb_prosody:
  
  synapse:
    build:
      context: "."
      dockerfile: synapse.dockerfile
      args:
        DOMAINNAME: "${DOMAINNAME}"
    container_name: synapse
    environment:
      SYNAPSE_CONFIG_PATH: /config/synapse.yaml
      VIRTUAL_HOST: "${DOMAINNAME}"
      VIRTUAL_PORT: "8448"
      VIRTUAL_PATH: /_matrix/
      LETSENCRYPT_HOST: "${DOMAINNAME}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
    volumes:
      - nginx_certs:/etc/synapse/certs:ro
      - synapse_data:/data
    depends_on:
      - nginx-gen
      - nginx-letsencrypt
    networks:
      - nginx_synapse

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    user: "1000:1000"
    ports:
      - 0.0.0.0:1883:1883/tcp
      - 0.0.0.0:9001:9001/tcp
    volumes:
      - /home/lars/docker-configuration/mosquitto.passwd:/mosquitto/config/mosquitto.passwd:ro
      - /home/lars/docker-configuration/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - /home/lars/docker-configuration/mosquitto.acl:/mosquitto/config/mosquitto.acl:ro
      - nginx_certs:/mosquitto/certs:ro
    networks:
      - nginx_weather

  mongodb:
    image: "mongo:4.4"
    container_name: mongodb
    restart: always
    volumes:
      - mongodb:/data/db
    networks:
      - mongodb

  mariadb:      
    container_name: mariadb
    build: 
      context: "."
      dockerfile: mariadb.dockerfile
    restart: always
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    networks:
      - mariadb_nextcloud
      - mariadb_icinga
      - nginx_nextcloud
      - mariadb_prosody

  ultisite:
    restart: always
    image: "ultisite:20241017"
    container_name: ultisite
    #build:
    #  context: "https://github.com/larswolter/ultisite.git"
    environment:
      MONGO_URL: mongodb://mongodb:27017/meteor
      ROOT_URL: "https://${ULTISITE_DOMAIN}"
      PORT: "8080"
      VIRTUAL_HOST: "${ULTISITE_DOMAIN}"
      VIRTUAL_PORT: "8080"
      LETSENCRYPT_HOST: "${ULTISITE_DOMAIN}"
    depends_on:
      - nginx-gen
      - nginx-letsencrypt
      - mongodb
    networks:
      - mongodb
      - nginx_ultisite

  toolws:
    restart: always
    image: "toolws"
    container_name: toolws
    build:
      context: "https://github.com/larswolter/toolws.git"
    environment:
      MONGO_URL: mongodb://mongodb:27017/toolws
      ROOT_URL: "https://${TOOLWS_DOMAIN}"
      PORT: "8080"
      VIRTUAL_HOST: "${TOOLWS_DOMAIN}"
      VIRTUAL_PORT: "8080"
      LETSENCRYPT_HOST: "${TOOLWS_DOMAIN}"
    depends_on:
      - nginx-gen
      - nginx-letsencrypt
      - mongodb
    networks:
      - mongodb
      - nginx_toolws

  weather:
    restart: always
    image: "weatherapp:20250408"
    container_name: weather
    #build:
    #  context: "https://github.com/larswolter/weatherapp.git#main"
    environment:
      HTTPS_METHOD: noredirect
      MONGO_URL: mongodb://mongodb:27017/weather
      ROOT_URL: "https://${WEATHER_DOMAIN}"
      PORT: "8080"
      VIRTUAL_HOST: "${WEATHER_DOMAIN}"
      VIRTUAL_PORT: "8080"
      LETSENCRYPT_HOST: "${WEATHER_DOMAIN}"
    depends_on:
      - nginx-gen
      - nginx-letsencrypt
      - mongodb
    networks:
      - mongodb
      - nginx_weather

  nextcloud:
    image: nextcloud:29-apache
    container_name: nextcloud
    restart: always
    volumes:
      - nextcloud:/var/www/html/config:cached
    depends_on:
      - nginx-gen
      - nginx-letsencrypt
      - mariadb
    environment:
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=mariadb
    networks:
      - mariadb_nextcloud
      - nginx_nextcloud

  borgbackup:
    container_name: borgbackup
    build: 
      context: "."
      dockerfile: borg-backup.dockerfile
    restart: always
    volumes:
      - borgbackup:/borg
      - /root/.ssh:/root/.ssh:ro
      - mongodb:/backup/mongodb:ro
      - mariadb:/backup/mariadb:ro
    environment:
      - BORG_BASE_DIR=/borg
      - BORG_REPO=user:password@host:folder
      - BORG_PASSPHRASE=geheim

networks:
  mongodb:
  mariadb_nextcloud:
  mariadb_prosody:
  mariadb_icinga:
  nginx_ultisite:
  nginx_toolws:
  nginx_weather:
  nginx_nextcloud:
  nginx_prosody:
  nginx_synapse:
  nginx_proxy:

volumes:
  acme:
  nextcloud:
    external: true
  mongodb:
    external: true
  mariadb:
    external: true
  nginx_certs:
    external: true
  nginx_conf:
    external: true
  nginx_vhost:
    external: true
  nginx_html:
    external: true
  borgbackup:
    external: true
  synapse_data:
    external: true
